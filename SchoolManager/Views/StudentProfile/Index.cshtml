@model SchoolManager.ViewModels.StudentProfileViewModel
@{
    ViewData["Title"] = "Mi Perfil";
    Layout = "_AdminLayout";
}

<style>
    .profile-header {
        background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
        color: white;
        padding: 2rem;
        border-radius: 1rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);
    }
    .profile-header h2 {
        margin: 0;
        font-size: 2rem;
        font-weight: 700;
    }
    .profile-card {
        border-radius: 1rem;
        box-shadow: 0 4px 6px -1px rgba(0,0,0,0.08);
        border: none;
    }
    .profile-card .card-header {
        background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
        color: white;
        border-radius: 1rem 1rem 0 0 !important;
        font-weight: 600;
        font-size: 1.2rem;
        padding: 1.25rem;
    }
    .info-section {
        background: #f8fafc;
        border-left: 4px solid #2563eb;
        border-radius: 0.5rem;
        padding: 1.25rem;
        margin-bottom: 1.5rem;
    }
    .info-section h5 {
        color: #1e293b;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    .info-item {
        display: flex;
        align-items: center;
        padding: 0.5rem 0;
        color: #475569;
    }
    .info-item i {
        width: 30px;
        color: #2563eb;
    }
    .form-label {
        font-weight: 600;
        color: #334155;
        margin-bottom: 0.5rem;
    }
    .form-control:focus {
        border-color: #2563eb;
        box-shadow: 0 0 0 0.2rem rgba(37, 99, 235, 0.25);
    }
    .btn-primary {
        background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
        border: none;
        padding: 0.75rem 2rem;
        font-weight: 600;
        border-radius: 0.5rem;
    }
    .btn-primary:hover {
        background: linear-gradient(135deg, #1e40af 0%, #1e3a8a 100%);
        transform: translateY(-1px);
        box-shadow: 0 4px 6px -1px rgba(0,0,0,0.2);
    }
    .btn-secondary {
        padding: 0.75rem 2rem;
        font-weight: 600;
        border-radius: 0.5rem;
    }
    .readonly-badge {
        background: #e2e8f0;
        color: #475569;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-weight: 500;
    }
</style>

<div class="container-fluid">
    <!-- ENCABEZADO -->
    <div class="profile-header">
        <div class="d-flex align-items-center gap-3">
            <i class="bi bi-person-circle" style="font-size: 3rem;"></i>
            <div>
                <h2>Mi Perfil Personal</h2>
                <p class="mb-0 opacity-90">Actualiza tu información personal</p>
            </div>
        </div>
    </div>

    <!-- MENSAJES DE ALERTA -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <!-- COLUMNA IZQUIERDA: Información de Solo Lectura -->
        <div class="col-md-4">
            <div class="info-section">
                <h5><i class="bi bi-info-circle me-2"></i>Información de la Escuela</h5>
                
                <div class="info-item">
                    <i class="bi bi-building"></i>
                    <div>
                        <small class="text-muted d-block">Escuela</small>
                        <strong>@(Model.SchoolName ?? "No asignada")</strong>
                    </div>
                </div>

                <div class="info-item">
                    <i class="bi bi-book"></i>
                    <div>
                        <small class="text-muted d-block">Grado</small>
                        <strong>@(Model.Grade ?? "No asignado")</strong>
                    </div>
                </div>

                <div class="info-item">
                    <i class="bi bi-people"></i>
                    <div>
                        <small class="text-muted d-block">Grupo</small>
                        <strong>@(Model.GroupName ?? "No asignado")</strong>
                    </div>
                </div>

                <div class="info-item">
                    <i class="bi bi-person-badge"></i>
                    <div>
                        <small class="text-muted d-block">Rol</small>
                        <strong>Estudiante</strong>
                    </div>
                </div>
            </div>

            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                <strong>Nota:</strong> Solo puedes modificar tu información personal. 
                Para cambiar tu contraseña, usa la opción "Cambiar Contraseña" en el menú.
            </div>
        </div>

        <!-- COLUMNA DERECHA: Formulario Editable -->
        <div class="col-md-8">
            <div class="card profile-card">
                <div class="card-header">
                    <i class="bi bi-pencil-square me-2"></i>
                    Editar Información Personal
                </div>
                <div class="card-body">
                    <form asp-action="Update" method="post" id="profileForm">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)
                        
                        <div class="row">
                            <!-- Nombre -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Name" class="form-label">
                                    <i class="bi bi-person me-1"></i>@Html.DisplayNameFor(m => m.Name)
                                </label>
                                <input asp-for="Name" class="form-control" placeholder="Ingresa tu nombre" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>

                            <!-- Apellido -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="LastName" class="form-label">
                                    <i class="bi bi-person me-1"></i>@Html.DisplayNameFor(m => m.LastName)
                                </label>
                                <input asp-for="LastName" class="form-control" placeholder="Ingresa tu apellido" />
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Correo Electrónico -->
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label">
                                <i class="bi bi-envelope me-1"></i>@Html.DisplayNameFor(m => m.Email)
                            </label>
                            <input asp-for="Email" type="email" class="form-control" placeholder="ejemplo@correo.com" id="emailInput" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                            <small class="form-text text-muted">
                                Este correo será usado para notificaciones y comunicaciones de la escuela.
                            </small>
                        </div>

                        <!-- Documento de Identidad -->
                        <div class="mb-3">
                            <label asp-for="DocumentId" class="form-label">
                                <i class="bi bi-credit-card me-1"></i>@Html.DisplayNameFor(m => m.DocumentId)
                            </label>
                            <input asp-for="DocumentId" class="form-control" placeholder="8-123-4567" id="documentInput" />
                            <span asp-validation-for="DocumentId" class="text-danger"></span>
                        </div>

                        <!-- Fecha de Nacimiento -->
                        <div class="mb-3">
                            <label asp-for="DateOfBirth" class="form-label">
                                <i class="bi bi-calendar-event me-1"></i>@Html.DisplayNameFor(m => m.DateOfBirth)
                            </label>
                            <input asp-for="DateOfBirth" type="date" class="form-control" />
                            <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <!-- Teléfono Principal -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="CellphonePrimary" class="form-label">
                                    <i class="bi bi-phone me-1"></i>@Html.DisplayNameFor(m => m.CellphonePrimary)
                                </label>
                                <input asp-for="CellphonePrimary" type="tel" class="form-control" placeholder="6XXX-XXXX" />
                                <span asp-validation-for="CellphonePrimary" class="text-danger"></span>
                            </div>

                            <!-- Teléfono Secundario -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="CellphoneSecondary" class="form-label">
                                    <i class="bi bi-phone me-1"></i>@Html.DisplayNameFor(m => m.CellphoneSecondary)
                                </label>
                                <input asp-for="CellphoneSecondary" type="tel" class="form-control" placeholder="6XXX-XXXX (opcional)" />
                                <span asp-validation-for="CellphoneSecondary" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Botones -->
                        <div class="d-flex justify-content-end gap-2 mt-4">
                            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                                <i class="bi bi-x-circle me-1"></i>
                                Cancelar
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle me-1"></i>
                                Guardar Cambios
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        $(document).ready(function() {
            var atSymbol = String.fromCharCode(64);
            
            // Validación en tiempo real de email
            let emailTimeout;
            $('#emailInput').on('input', function() {
                clearTimeout(emailTimeout);
                const email = $(this).val();
                const userId = $('#Id').val();
                
                if (email && email.indexOf(atSymbol) > -1) {
                    emailTimeout = setTimeout(function() {
                        $.get('@Url.Action("CheckEmailAvailability")', 
                            { email: email, userId: userId },
                            function(data) {
                                if (!data.available) {
                                    $('#emailInput').addClass('is-invalid');
                                    if ($('#emailInput').next('.invalid-feedback').length === 0) {
                                        $('#emailInput').after('<div class="invalid-feedback">Este correo ya está en uso.</div>');
                                    }
                                } else {
                                    $('#emailInput').removeClass('is-invalid');
                                    $('#emailInput').next('.invalid-feedback').remove();
                                }
                            });
                    }, 500);
                }
            });

            // Validación en tiempo real de documento
            let documentTimeout;
            $('#documentInput').on('input', function() {
                clearTimeout(documentTimeout);
                const documentId = $(this).val();
                const userId = $('#Id').val();
                
                if (documentId && documentId.length > 3) {
                    documentTimeout = setTimeout(function() {
                        $.get('@Url.Action("CheckDocumentAvailability")', 
                            { documentId: documentId, userId: userId },
                            function(data) {
                                if (!data.available) {
                                    $('#documentInput').addClass('is-invalid');
                                    if ($('#documentInput').next('.invalid-feedback').length === 0) {
                                        $('#documentInput').after('<div class="invalid-feedback">Este documento ya está en uso.</div>');
                                    }
                                } else {
                                    $('#documentInput').removeClass('is-invalid');
                                    $('#documentInput').next('.invalid-feedback').remove();
                                }
                            });
                    }, 500);
                }
            });

            // Confirmación al guardar
            $('#profileForm').on('submit', function(e) {
                e.preventDefault();
                
                Swal.fire({
                    title: '¿Guardar cambios?',
                    text: '¿Estás seguro de que deseas actualizar tu información personal?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#2563eb',
                    cancelButtonColor: '#6b7280',
                    confirmButtonText: 'Sí, guardar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        this.submit();
                    }
                });
            });
        });
    </script>
    
    @if (TempData["Success"] != null)
    {
    <script>
        $(document).ready(function() {
            Swal.fire({
                title: '¡Éxito!',
                text: '@TempData["Success"]',
                icon: 'success',
                confirmButtonColor: '#2563eb',
                confirmButtonText: 'Entendido'
            });
        });
    </script>
    }
}

