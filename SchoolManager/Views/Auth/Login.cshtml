@model SchoolManager.Models.LoginViewModel

@{
    ViewData["Title"] = "Iniciar Sesión";
    Layout = "_Layout";
}

<style>
    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .login-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.2);
        overflow: hidden;
        position: relative;
    }
    
    .login-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2, #667eea);
        background-size: 200% 100%;
        animation: shimmer 3s ease-in-out infinite;
    }
    
    @@keyframes shimmer {
        0% { background-position: -200% 0; }
        100% { background-position: 200% 0; }
    }
    
    .logo-container {
        text-align: center;
        padding: 2rem 0 1rem 0;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        margin: -2rem -2rem 2rem -2rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }
    
    .logo-img {
        max-height: 80px;
        width: auto;
        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
        transition: transform 0.3s ease;
    }
    
    .logo-img:hover {
        transform: scale(1.05);
    }
    
    .login-title {
        color: #495057;
        font-weight: 600;
        font-size: 1.5rem;
        margin-bottom: 0;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    
    .form-floating > .form-control {
        border-radius: 12px;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.8);
    }
    
    .form-floating > .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        background: rgba(255, 255, 255, 1);
    }
    
    .form-floating > label {
        color: #6c757d;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .form-floating.focused > label {
        color: #667eea;
        transform: scale(0.95);
    }
    
    .btn-login {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        border-radius: 12px;
        padding: 12px 24px;
        font-weight: 600;
        font-size: 1.1rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
    }
    
    .btn-login:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 25px rgba(102, 126, 234, 0.4);
        background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
    }
    
    .btn-login:active {
        transform: translateY(0);
    }
    
    .form-check-input:checked {
        background-color: #667eea;
        border-color: #667eea;
    }
    
    .form-check-label {
        color: #495057;
        font-weight: 500;
    }
    
    .password-toggle {
        background: none;
        border: none;
        color: #6c757d;
        transition: color 0.3s ease;
    }
    
    .password-toggle:hover {
        color: #667eea;
    }
    
    .floating-elements {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
        z-index: -1;
    }
    
    .floating-circle {
        position: absolute;
        border-radius: 50%;
        background: rgba(102, 126, 234, 0.1);
        animation: float 6s ease-in-out infinite;
    }
    
    .floating-circle:nth-child(1) {
        width: 80px;
        height: 80px;
        top: 20%;
        left: 10%;
        animation-delay: 0s;
    }
    
    .floating-circle:nth-child(2) {
        width: 60px;
        height: 60px;
        top: 60%;
        right: 15%;
        animation-delay: 2s;
    }
    
    .floating-circle:nth-child(3) {
        width: 40px;
        height: 40px;
        bottom: 20%;
        left: 20%;
        animation-delay: 4s;
    }
    
    @@keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-20px) rotate(180deg); }
    }
</style>

<div class="container">
    <div class="row justify-content-center align-items-center min-vh-100">
        <div class="col-md-5 col-lg-4">
            <div class="login-container">
                <div class="floating-elements">
                    <div class="floating-circle"></div>
                    <div class="floating-circle"></div>
                    <div class="floating-circle"></div>
                </div>
                
                <div class="logo-container">
                    <img src="~/images/logo-eduplaner.png" alt="Eduplaner Logo" class="logo-img">
                    <h2 class="login-title">@ViewData["Title"]</h2>
                </div>
                
                <div class="card-body p-5">
                    
                    <form asp-action="Login" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="form-floating mb-3">
                            <input asp-for="Email" class="form-control" placeholder="name@example.com" autocomplete="username" />
                            <label asp-for="Email">Email</label>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        
                        <div class="form-floating mb-3 position-relative">
                            <input asp-for="Password" class="form-control" placeholder="Password" autocomplete="current-password" id="passwordInput" />
                            <label asp-for="Password">Contraseña</label>
                            <button type="button" class="btn password-toggle position-absolute top-50 end-0 translate-middle-y me-3" id="togglePassword" style="z-index: 10;">
                                <i class="fas fa-eye" id="toggleIcon"></i>
                            </button>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        
                        <div class="form-check mb-3">
                            <input asp-for="RememberMe" class="form-check-input" />
                            <label asp-for="RememberMe" class="form-check-label">Recordarme</label>
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-login btn-lg">
                                <i class="fas fa-sign-in-alt me-2"></i>Iniciar Sesión
                            </button>
                        </div>
                    </form>
                    
                    <div class="text-center mt-4 pt-3" style="border-top: 1px solid rgba(0,0,0,0.1);">
                        <small class="text-muted">
                            <i class="fas fa-shield-alt me-1"></i>
                            Sistema seguro de gestión educativa
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Funcionalidad para mostrar/ocultar contraseña
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('passwordInput');
            const toggleIcon = document.getElementById('toggleIcon');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        });

        // Efecto de carga en el botón de login
        document.querySelector('form').addEventListener('submit', function(e) {
            const submitBtn = document.querySelector('.btn-login');
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Iniciando sesión...';
            submitBtn.disabled = true;
        });

        // Efecto de hover en los inputs
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });
            
            input.addEventListener('blur', function() {
                if (!this.value) {
                    this.parentElement.classList.remove('focused');
                }
            });
        });

        // Mostrar mensajes de error
        @if (TempData["Error"] != null)
        {
            <text>
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '@TempData["Error"]',
                confirmButtonText: 'Aceptar'
            });
            </text>
        }

        // Mostrar mensajes de éxito
        @if (TempData["Success"] != null)
        {
            <text>
            Swal.fire({
                icon: 'success',
                title: 'Éxito',
                text: '@TempData["Success"]',
                confirmButtonText: 'Aceptar'
            });
            </text>
        }
    </script>
} 